让我为您翻译这段关于 Minecraft 模组开发的内容： 让我们把一些项目组合在一起，学习标签系统.
现在有 121 个 Minecraft 模组开发课程，包含超过 11 小时的内容，涵盖从基础知识到方块实体和自定义生物的所有内容.
在本教程中，我们将讨论自定义标签及其用途.
这里说的不是命名标签，而是我们之前见过的标签，比如我们添加的可挖掘（minable）标签和需要工具（needs_tool）标签.
 现在我们要创建一个自定义标签，这个标签将让我们的模组能够更好地与其他模组兼容.
在我们的自定义方块类中，当我们添加魔法方块时，我们设定如果扔在上面的物品是原始铋，就会将其转化为钻石.
但现在我想改变这个逻辑：如果扔在方块上的物品属于特定标签，就将其转化为钻石.
 这样做有几个好处： 1. 我们可以轻松扩展功能 2. 可以包含尚未加载的其他模组的物品 3. 其他模组可以将它们的物品添加到这个标签中，不会有任何问题 要使用标签，我们需要在两个地方定义它.
如果要在代码中使用标签（显然我们想用它来替换现有的 if 语句），我们需要创建一个类.
当然，仅创建 JSON 文件也可以工作，但那样就无法在代码中使用了.
 让我们从代码开始.
在 tutorial mod 包中，我们创建一个名为 util 的新包（我通常把标签放在这里），然后在 util 包中创建一个名为 ModTags 的 Java 类.
在这个类中，我们需要两个静态类：一个是 public static 的 Blocks 类，另一个是 public static 的 Items 类.
从 Items 开始，我们需要一个私有静态的帮助方法，返回类型为 TagKey，用于创建带有名称参数的标签.
 我将为您翻译这段关于 Minecraft 模组开发的文本： 创建一个资源位置，该位置来自命名空间和路径教程模组的 ID，然后是名称参数.
这样辅助方法就完成了.
接着只需将相同的内容复制到这里的方块部分，将其更改为方块，确保我们在这里选择 net.minecraft.world.level.block 作为类（这一点非常重要），然后这里就变成了方块标签.
 注：保留了技术术语如 "net.minecraft.world.level.block" 的原文形式，因为这些是具体的代码路径.
这段翻译保持了原文的技术含义，同时使其对中文读者更容易理解.
 让我为您翻译这段文本： 像往常一样，这就完成了两个类的创建.
当然，所有代码都可以在下方的 GitHub 仓库中找到，您也可以在那里进行复查.
现在我们要添加一个物品标签，这个物品标签将是一个 public static final 的 Tag.Key 类型，名为 TRANSFORM_ORE_ITEMS，它等于 createTagKey 方法，使用相同的名称 "transformable_ore_items".
这样标签就定义好了.
请注意，这个标签实际上还不存在，因为我们还需要在数据文件夹中创建它.
但首先让我们回到魔法方块并进行修改.
现在我们可以看到这是我们的 if 语句：如果扔在上面的物品是原始铋，那么它就会变成钻石.
现在我想要做的是使用 isValid 方法并传入 itemEntity.
 注：保留了代码相关的专有名词如 Tag.Key、Item、TRANSFORM_ORE_ITEMS、createTagKey、if 等，以保持技术准确性.
 让我为您翻译这段文本为简体中文： 现在获取物品，当然这个方法还不存在，因为我们还没有创建它，但这就是一种编程方式.
你只需要写下来，这将是我们的新方法.
然后我们将鼠标悬停在这上面并创建该方法，你可以立即看到它是一个布尔值，并且有我们的 itemStack 作为参数.
在这里我们不会返回 false，我们实际上想要返回以下内容：我们要获取这个物品，也就是 itemStack，然后用 mod tags.items.transformable_items，这意味着如果我们发现扔在方块上的物品堆属于这个可转换物品标签，我们就会返回 true，就是这样，然后这些物品都会被转换成钻石.
至于标签的内容，让我们转到我们的数据文件夹 tutorial_mod，然后在这里我们要创建一个名为 Tags 的新目录，在其中再创建一个名为 item 的新目录（这很重要），然后 JSON 文件必须完全按照这个名字命名，所以我实际上要简单地把名字复制过来，确保这里的名字正确：transformable_items.
 让我为您翻译这段关于 Minecraft 模组开发的内容： JSON 文件的内容我也会再次复制过来，这些值都可以在这里看到.
我们有铋矿石、原始铋矿，我还添加了煤炭、木棍和指南针，主要是为了展示这里将会有一些不同的变化.
现在，当这些不同的物品被扔进魔法方块时，都可以变成钻石，就是这么简单.
 关于标签本身，我之前说过，它们基本上就是具有相似功能或某种关联的集合.
它们真正酷的地方在于，你可以通过简单地创建新的 JSON 文件来轻松扩展它们.
更棒的是，理论上其他模组也可以向你的标签添加内容，这也是为什么它如此出色的原因之一.
 好了，这就是我们需要做的所有事情，让我们进入游戏看看是否有效.
回到 Minecraft 后，我拿了所有我们添加到标签中的物品.
我们可以看到铋矿石变成了钻石，原始铋矿也变成了钻石，现在煤炭、木棍和指南针也都会变成钻石.
这听起来合理吗？当然不，但这就是魔法，所以就这样吧.
 你可能会说："等等，也许你只是让所有东西都变成钻石？"不是的，红石不会变成钻石，煤矿石也不会变成钻石.
但是指南针、木棍、煤炭都可以，而钻石还是钻石，因为它们本来就是钻石.
 这就是如何向 Minecraft 添加自定义标签，非常棒.
如果你现在还不是完全理解标签的真正优势也没关系，但作为入门介绍，我认为这是个不错的例子.
像往常一样，所有代码都在下方提供.
这就是本教程的全部内容，下次视频我们将讨论数据生成