让我来翻译这段关于 Minecraft 模组开发中事件系统的讲解： 这些事件到底是什么？让我们来看看.
在下方有 121 个 Minecraft 模组开发课程，包含超过 11 小时的内容，涵盖从基础知识到方块实体和自定义生物的所有内容.
 在本教程中，我们将深入了解 NeoForge 中的事件系统.
事件是一个非常灵活的系统，它允许我们在特定时刻触发相应的操作.
比如我们之前看到的，可以在计算 FOV 时进行修改.
 对于这个事件教程，我假设你已经具备相当的 Java 知识基础.
这里所说的"相当"指的是中级水平，至少要理解 if 语句等基本概念.
我知道很多人想要强行突破，但这并不是个好主意.
如果你觉得自己的 Java 基础还不够扎实，建议先去补充一下相关知识.
 事件系统分为四种主要类型： 1. 客户端游戏事件 2. 服务器游戏事件 3. 客户端模组事件 4. 服务器模组事件 这些事件可以分为两个维度：客户端/服务器和游戏总线/模组总线.
理解事件类型非常重要，否则代码将无法正常工作.
 [由于字数限制，部分细节内容省略] 总的来说，模组事件通常用于注册阶段的修改，而游戏事件则用于游戏运行时的操作，比如实体受伤、生成或治疗等情况.
客户端主要处理渲染相关的内容，而服务器则负责处理可能涉及作弊的操作.
 让我为您翻译这段文本： 这段代码会在实体受到伤害之前被调用.
我们需要在方法上方添加广告订阅事件，然后看看我们能做些什么.
让我们先来看看：当我们击中某物时，生物伤害事件会带有几个非常有用的字段.
我们可以获取伤害来源、伤害数值、新伤害值、伤害容器（我也不太确定伤害容器具体是什么）以及受伤的实体.
 举个例子，假设我们想检查以下情况：如果我们造成的伤害是针对羊的，那么首先我们要将这个实体转换为羊类型，然后对其进行一些特殊操作.
我们还可以进一步判断：如果伤害来源是玩家（我们先获取来源实体，然后检查它是否是玩家的实例，并将其转换为玩家类型），这样我们就同时获得了受伤的羊和造成伤害的玩家.
 现在事情变得有趣了，因为我们可以访问玩家，所以可以询问各种问题.
再次提醒，当你编程时，这就像是一系列的提问：比如检查玩家物品栏中是否有特定物品，或者手中是否持有某物（通过 player.getMainHand().getItem()）.
我们可以设定某个条件，当物品等于 items 时触发特定操作.
 好的，这是什么意思呢，我们刚刚有一个实体，这是触发该事件的唯一方式.
我们甚至可以在这里看到，LivingDamage 捕获了实体在伤害序列中的生命值损失，此时所有减伤效果都已应用.
前置事件允许在伤害值应用到实体生命值之前对其进行修改，后置事件包含了实体伤害序列的不可变表示，允许引用每个步骤中产生的值.
举个例子，你也可以在这里看到更多关于伤害容器的信息.
它非常细致，但在这种情况下，我们可以说，嘿，通过这个事件和这个特定的方法，当任何生物实体受到伤害时都会被调用，然后我们检查：被伤害的实体是否是羊，以及是否是被玩家伤害的？如果是这种情况，那么我们就进入这个 if 语句，然后我们说：好的，我们是否用末地烛击中了这只羊？是的，这就是我要说的.
如果是这种情况，那么我们首先要说 player.sendSystemMessage(Component.literal)，让我们说 player.getName().
 让我将这段游戏开发相关的文本翻译为中文： 然后我们想获取这个字符串 - 用末地烛击打羊，你这个变态.
就说到这里，接下来我们可以做更疯狂的事情.
我们可以让羊添加一个效果，创建一个新的状态效果实例，比如中毒效果，持续 600 刻度，增幅等级设为 6（这样就会获得 7 级中毒效果）.
我们甚至要消耗末地烛，也就是说末地烛会消失 - 我们调用 getMainHandItem()方法并将其数量减少 1，这样玩家主手中的末地烛数量就会减少.
 这件很酷的事情在于，我们刚刚为一个原版物品添加了新功能.
想想看，我现在可以用末地烛击打羊，让它产生之前没有的效果.
这就是为什么事件如此强大 - 你可以为原版物品添加功能，甚至不需要访问自定义类，因为事件为你处理了很多这样的事情.
 让我们在游戏中实际看看效果.
在 Minecraft 中按 F 返回，在这里生成一些羊.
你会发现如果正常攻击它们什么都不会发生，但如果我拿着末地烛击打羊，你可以看到它不仅输出文本，羊还会中毒一段时间.
我可以继续攻击，你会看到它会减少末地烛的数量.
太神奇了！ 我可以告诉你，如果你想要实现更复杂的功能，事件就是你最好的朋友.
希望这个关于如何通过事件为游戏添加一些很酷功能的介绍对你有用.
代码当然可以在下方找到.
如果这个事件使用的入门对你有帮助的话，接下来我们会讨论声音和方块声音，希望到时候见