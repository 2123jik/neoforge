让我来将这段文本翻译成简体中文： 听听这些悦耳的声音吧，让我们在 Minecraft 1.21 的自定义方块音效组中添加自定义音效.
在下方提供的 Minecraft 模组开发课程中，有超过 11 小时的内容，涵盖了从基础知识到方块实体和自定义生物的所有内容.
在本教程中，我们将讨论自定义音效.
是的，刚才那段话是倒着说的，因为我们正在讲解音效相关的教程，所以我觉得玩一下声音很合适，不是吗？ 无论如何，我们要做的是：首先，为我们的 Minecraft 模组添加一个自定义音效；其次，我们还要添加一个自定义音效方块组，这基本上意味着我们要更改我们的魔法方块的所有音效，包括踩踏音效、播放音效、破坏音效、击打音效和掉落音效.
这确实很有趣.
 现在，无论我们想制作什么类型的音效，第一步都是在我们的教程模组包中右键新建一个名为"sound"的包.
在其中，我们需要创建一个新的 Java 类，这将是模组音效类.
在这里，我们需要一个 DeferredRegister 来注册我们的音效，即类型为 SoundEvent 的 public static final DeferredRegister，当然这将等于 DeferredRegister.
 让我帮你翻译这段关于《Immersive Translate》中的游戏开发内容.
以下是简体中文翻译： 创建内置注册表来实现声音事件教程模组.
模组 ID 和往常一样，所有代码都在下方提供，在这种情况下可能会很有用.
然后我们这里有一个带有 iEventBus 的 register 方法，我们将这样调用 register 方法.
这基本上是我们长期以来设置这些注册类的常规方式.
所以你看到了 mod sounds.register 传入事件总线，就是这样.
现在为此，我们需要一个辅助方法，它只是帮助我们让这个过程变得更简单.
我们要有一个类型为 SoundEvent 的私有静态供应器，这将是这里的 registerSoundEvent 方法，带有一个字符串名称参数.
在这里，我们首先要有一个资源位置，我们将其称为 ID，等于 Resource Location.fromNamespace 和路径 tutorialMod.ID，然后传入名称.
我们不一定需要这样做，但这样做很好.
然后我们将返回 soundEvents.register，传入名称和一个 SoundEvent 的供应器.
 这个翻译保留了代码相关的专有名词（如 SoundEvent、Resource Location 等），同时将描述性的内容翻译成了通俗易懂的中文.
翻译考虑了游戏开发的技术上下文，确保意思准确传达.
 让我将这段文本翻译成简体中文： 创建一个变量范围，传入 ID，这就是注册声音事件的方法.
现在我们可以实际注册这些声音了.
这是非常直接的，创建一个 SoundEvent 类型的 public static final Supplier，这将是凿子使用的声音，因为我们要添加一个使用凿子时播放的声音事件.
这里要注册声音事件，命名为"chisel_use"，正确拼写非常重要.
 接下来，我们要立即为魔法方块添加不同的声音事件.
这同样也是一个 SoundEvent 的 Supplier，所以我们复制这一行，这个将是魔法方块破坏的声音，这里同样命名为"magic_block_break".
我要再复制四次来添加"step"（脚步声），修改相应的名称很重要 - 字段名和传给注册声音方法的字符串都要改.
然后是"hit"（击打声），不是"jot"而是"hit"，最后是"fall"（掉落声），因为这个通常不太重要.
 有了所有这些很好，但是现在我们需要把它们捆绑在一起才能在方块中使用.
为此，我们要创建一个 public static final DeferredSoundType，命名为 MAGIC_BLOCK_SOUNDS，用音量 1 和音调 1 新建一个 DeferredSoundType，然后我们就可以直接使用 ModSounds.
 这将是破坏音效，然后我们有 mod 音效，接着是 mod 音效，然后是 mod 音效点，这将是脚步声音效，Mod 音效点，我要放置的声音这是正确的，顺序应该已经没问题了，然后我要添加击打音效，最后是 mod 音效点 fall，好了，让我们稍微调整一下格式，这样就行了，现在我们也可以实际使用它了.
让我们把所有这些都用上，把方块音效放进去，在 mod 方块类中注册自定义方块时非常直接，如果你想要一个不同的音效类型，你只需要在方块行为属性上调用 sound 方法，然后传入 mod 音效即可.
 *注：保留了"mod"、"sounds"、"fall"等专有名词和技术术语.
这段文本描述了在游戏开发中设置和使用各种音效的过程.
* 让我来翻译这段关于游戏音效的描述： 神奇的方块音效，就是这样.
当然你也可以使用 - 我想说的是这些是音效类型，对，音效类型，你可以看到这些都是原版的音效.
但在我们的情况下，我们当然想要使用我们的自定义音效，因为这真的非常酷.
说到凿子物品，我们实际上已经有了一个右键点击时播放的音效，然而，我们当然可以改变这个音效.
现在我们正在使用磨石的使用音效，但不不不，我们要改成 mod sounds.chisel use.
 以下是对输入文本的中文翻译： 获取并实际播放那个音效.
你可能会说："等一下，那是什么声音？因为我们还没有添加任何音效"――这说得没错.
为此，我们需要进入 assets 文件夹，在 tutorial mod 文件夹中创建一个新目录.
右键点击新建目录，将其命名为"sound"（声音），这一步非常重要.
在该目录中，我们要复制进.ogg 文件.
 当然，这些.ogg 文件都可以在下方下载，它们都使用 Creative Commons Zero 许可证，基本上属于公共领域.
这里要注意的是，所有声音文件必须是正确的.ogg 格式文件.
不能简单地将 MP3 文件重命名后缀，而是需要正确转换为.ogg 格式，并且必须是单声道.
确保文件是单声道格式极其重要，否则系统会将其解释为在整个服务器上播放，这显然不是我们想要的，因为这会产生负面影响.
 不过这还不是全部，在 tutorial mod 文件夹中，你还需要创建一个名为 sounds 的新文件.
 这看起来很奇怪，但确实如此.
这里的想法是我们实际上要定义每个音效.
我先写一个，然后我们复制其余的部分，因为总的来说这并不复杂.
基本上，你需要一个名称，这个名称就是在这里定义的名称.
所以对于 chisel uncore use，我会在这里把它作为一个名称，这将是一个特定的对象.
我们会有一些字幕，这就是字幕部分.
我要把这些音效命名为 tutorial mod（教程模组）.
 让我为您翻译这段关于《Immersive Translate》中 Minecraft 模组开发的内容： 当你启用了字幕功能时，这个功能显然会被显示出来，你可以用它来进行翻译，这应该很容易理解.
在这里我们有一个音效列表，这是教程模组的凿子使用音效.
这里有很多凿子使用的音效，它们各自代表什么呢？就像我说的，这里的名称必须与音效文件中的名称相匹配.
当然你可以设置多个音效，比如说我们可以有"chisel1"和"chisel2"，这完全没问题，因为这是一个列表，我们可以有多个不同的音效文件.
 这里的音效名称必须与 OGG 文件中的音效名称相匹配.
在我们这个例子中它们是相同的，但这并不是必须的.
重要的是要理解这一点：这些名称不必完全相同，只需要确保这个名称与音效事件的名称匹配，而这里的名称要与 OGG 文件的名称匹配.
 现在音效 JSON 文件已经正确配置，位于 tutorial mods 文件夹中.
我们这里有音效，有 OGG 文件，所有内容都已注册.
现在我们可以进入游戏测试它是否正常工作.
 回到 Minecraft 后，让我们调高音量来听一些有趣的音效.
首先是魔法方块，放置时的音效与之前不同；如果我打破它，如果我切换到生存模式并击打它，听起来确实不一样；如果我走在上面，这绝对是一个魔法音效.
跌落音效基本上只在生存模式下触发，问题是你也会听到类似腿部受伤的声音，所以听起来可能有点奇怪.
 凿子使用的音效实际上比我预期的要安静得多，可能需要在后期稍微提高一下音量.
它与砂轮的声音很相似，但我可以保证这绝对是不同的声音.
这就是自定义音效的内容，包括物品和方块的音效.
所有代码都可以在下方找到.
下一期视频中，我们将添加自定义音乐唱片，希望到时候能见到你们