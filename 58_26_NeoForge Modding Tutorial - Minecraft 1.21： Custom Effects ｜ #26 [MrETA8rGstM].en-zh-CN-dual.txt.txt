让我将这段文本翻译成简体中文： 让我们为 Minecraft 添加一个自定义效果.
下面提供了 121 个 Minecraft 模组开发课程，包含超过 11 小时的内容，涵盖从基础知识到方块实体和自定义生物的所有内容.
在本教程中，我们将为我们的 Minecraft 模组添加一个自定义效果.
说实话，自定义效果比你想象的要更直接一些，当然这总是取决于效果的类型.
 在本教程中，我们将添加"黏液效果"，基本上可以让你在拥有这个特定效果时攀爬水平表面.
如果你想要其他效果，当然需要你自己去摸索具体如何实现.
我只想展示如何注册效果，然后在下一个教程中，我们将讨论药水等相关内容.
 现在，在教程模式包中，我们要右键新建一个名为 effect 的包，然后在里面需要两个新的 Java 类：第一个是用于注册效果的 effects 类，然后在 effect 包中还要有表示实际效果本身的 slimy effect 类.
我们先从 slimy effect 开始.
 首先要说明的是，这是基于相同的攀爬效果，在 MIT 许可证下分发，请记住这一点.
实际上他们帮助我完成了代码，这就是基本思路.
但请记住这是代码的来源.
 这其实很简单，自定义效果需要继承自 mob effect 类（是 mob effect 而不是 mob effects，这点很重要）.
然后我们可以简单地悬停在上面创建匹配的超类构造函数，我们要选择第一个，这就是我们需要的.
我们要把它改成公共的，然后我们可以重写几个方法，这里我们需要重写 apply effect tick 方法，以及非常重要的 should apply effect tick 方法.
 第二个方法只需要返回 true，因为我们希望在每个特定的 tick 中都应用这个效果.
在 apply effect tick 方法中，我们要做的事情非常直接，就是如果实体实际上正在朝着一个方块移动并在水平方向撞击方块，我们可以通过检查 living entity 来实现这一点.
 我理解您想要将这段英文文本翻译成中文.
以下是翻译： 水平碰撞如果成立的话，我们将实现让你能够像蜘蛛一样爬上那个特定的方块，基本上我们要获取 vector 3 方向，这是生物实体初始移动的向量，这等于 living entity.
 这里我保留了一些专业术语如"vector 3"和"living entity"的原文形式，因为这些是编程相关的专有名词.
翻译保持了原文的技术含义，同时确保中文表达通顺易懂.
 需要注意的是，这段文本似乎是描述游戏开发中的碰撞检测和实体移动机制，特别是实现类似蜘蛛攀爬功能的相关逻辑.
如果您需要更专业的技术术语解释或者代码实现的建议，我很乐意为您提供更多帮助.
 让我将这段文本翻译成简体中文： 获取 Delta 移动，然后我们将获取攀爬向量，这只是我们在完成后想要得到的向量.
这将是一个新的 Vector3，包含初始 X 方向，我们要添加一个正 Y 值，同时保持初始 Z 方向.
然后我们要设置实体的 Delta 移动，将其设置为等于攀爬向量，并且我们要稍微降低一下速度.
这里的速度降低并非必需，但在这种情况下是可以的，因为相比初始移动会稍慢一些.
无论如何，这就是效果实现的全部内容.
正如我所说，如果你想要其他功能，需要自己去研究.
 你当然可以进入 mob effect 类（按住 Control 并左键点击），查看这个类.
这个类实际上被用于多个效果，你也可以按 Ctrl+H 查看其他效果，比如渗出效果、中毒效果等等.
强烈建议你也去看看这些效果.
其他模组的效果也很有趣，所以可以去 GitHub 上看看一些效果.
当然要注意许可证，不要直接抄袭别人的代码，这不仅不道德，理论上也是违法的.
 在 mod effects 类中，我们现在要注册我们的自定义效果.
这将通过一个 public static final 来实现 - 你能猜到吗？没错，是一个 mob effect 类型的 deferred register.
在这种情况下，mob effect 非常重要，将等于一个 deferred register.
 让我为这段文本提供中文翻译： 这是为内置注册表创建的，用于怪物效果和教程模组.
模组 ID 和往常一样，所有代码都可以在下方查看.
这里我们有一个注册方法，用于注册怪物效果，传入事件总线.
接着我们可以立即在这里调用这个注册方法，这是怪物效果，实际上是模组效果的注册方法.
现在我们有了这个，就可以注册我们的效果了，这其实并不太难.
我们基本上想要做的就是，需要有一个类型为怪物效果的公共静态 final 持有者，在这种情况下将其命名为黏液效果（slimy_effect），等于怪物效果注册器.
名称将是"slimy"，然后它将是一个新的黏液效果的供应器，这一点很重要，因为我们当然需要一个黏液效果.
这里的类别我选择了中性，即 mob_effect_category.
 注：保留了代码相关的专有名词如"final"、"holder"、"slimy_effect"等的原文形式，以保持技术准确性.
这段翻译保持了原文的技术含义，同时使其对中文读者更容易理解.
 这是一段关于游戏或软件开发中效果系统的描述，我将为您翻译： 中性的，而且我已经确定了颜色，这决定了当这个效果应用到你身上时粒子的颜色.
我们还需要调用 add attribute modifier（添加属性修改器）方法，正如你能想象的那样，当这个效果应用到生物实体上时，它会修改该实体的某个属性，这个属性就是 attributes.movement_speed（移动速度属性）.
这里的名称将使用来自命名空间和路径的资源位置：tutorial_mod.
 注：保留了技术术语如 "add attribute modifier"、"attributes.movement_speed" 和 "tutorial_mod" 的原始形式，以保持其在代码中的准确性.
 让我为您翻译这段关于游戏开发的描述： 这是一段关于修改器 ID 的内容，主要涉及"粘液"效果的实现.
游戏需要知道我们刚添加的属性修改器是"粘液"类型的，它会减少 0.25 的数值.
操作方式是"相乘总和"，也就是说我们要获取这个生物实体的总移动速度，然后减少 25%.
这就是这个属性修改器的作用 - 使带有粘液效果的生物或玩家的移动速度降低 25%.
这个设定是比较合理的，因为如果你被粘液覆盖确实会变慢.
除此之外，受影响的实体还获得了在水平墙面上攀爬的能力.
 不过这还不是全部，我们还需要在 assets（资源）目录下添加一些内容.
首先是翻译文件，这个翻译文件显示的是 effect.tutorial mod（教程模组的效果）.
 让我将这段关于 Minecraft 模组开发的讲解翻译成中文： 黏液效果当然需要一个名字，但这还不是全部，我们还需要为它设置材质.
在 assets/tutorial_mod/textures 目录下，我们需要创建一个新目录，我将其命名为 mob_effects，然后在里面添加 slimy.png 文件.
这个材质有个很特别的地方 - 效果图标的尺寸是 18x18 像素，这与普通的 16x16 像素不同.
我不太清楚为什么效果图标没有使用 16x16 的标准尺寸，也许是因为某些特殊效果需要更大的尺寸.
这是一个需要注意的重要细节：你的 mob 效果材质必须是 18x18 像素.
 一旦设置完成，我们就可以进入游戏测试了.
回到 Minecraft 中，让我们给自己添加这个效果：使用命令"effect give Dev tutorial_mod:slimy"，并设置为无限持续时间.
你可以立即注意到，首先，我的移动速度变慢了.
黏液效果已经被添加，显示了正确的材质和名称.
当发生水平碰撞时（比如走到方块旁边），你会看到一个很酷的效果.
我真的很喜欢这个效果，这展示了如何为 Minecraft 添加自定义效果，我觉得这非常棒.
像往常一样，所有代码都可以在下方找到.
这就是本次教程的全部内容，下一期视频我们将讨论自定义药水