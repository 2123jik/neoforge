让我将这段文本翻译为简体中文： 让我们在不同的方块上生成一棵树.
下面提供了 121 个 Minecraft 模组开发课程，包含超过 11 小时的内容，涵盖从基础知识到方块实体和自定义生物的所有内容.
好的，让我们继续，在这个简短的教程中，正如你清楚看到的，我们要实现的是让我们的自定义树（这个血木树）能够被放置并在不同的方块上生成.
这实际上比你想象的要复杂一些.
当然，这并不是特别复杂，但我们需要在树苗方块以及配置特性中都进行修改.
 树苗方块是一个灌木方块，在这个灌木方块中，你可以看到"mayPlaceOn"方法，基本上我们可以将其放置在泥土和任何农田方块上.
现在，我们要将其改为自定义树，因此我们要在教程模组的方块自定义包中右键点击新建一个 Java 类，这将是我们的模组树苗方块.
在这种情况下，我们要继承自树苗方块，因为我们想要保留树苗方块的其他所有功能，但要修改来自灌木方块的 mayPlaceOn 方法.
 我们将重写 mayPlaceOn 方法，你可以看到我们有一个 state 可用.
我们要做的是创建一个私有的静态最终变量，这将是一个方块，实际上是一个方块的供应器（我认为使用方块的供应器是最好的方式），这个变量将用于确定方块可以生存的地方.
我们将在构造函数中传入这个方块供应器，否则就没有太大意义了.
这将是我们的方块，然后我们要将其改为非静态的，改为私有 final，我认为这样最合理.
抱歉之前的错误，然后我们在这里放入方块，然后我们就可以使用这个供应器了.
 这段文本描述了一个关于游戏或程序开发中方块状态和树苗生成机制的技术内容，以下是翻译： 获取相等的状态.
获取方块并基本上表示，如果这里的方块匹配，那么你就可以在上面放置这个树苗.
最棒的是，我们可以将这个特定的类重复用于任意数量的不同树苗.
例如，对于血木树苗，你可以使用 mod sapling block，当然接下来我们需要传入的是――这将是一个 Block 的 Supplier，让我们暂且在这里使用地狱岩（Netherrack）作为示例.
这样就能完全正常工作了.
当然，如果我们有另一个树苗，我们可以传入一个不同的方块，它也会与那个特定的方块一起工作.
这是我们需要做的第一步.
第二步是在 configured feature 内部，我们需要调用不同的泥土提供器，然后添加另一个方块状态提供器.
这将是一个简单的方块状态提供器，用于方块.
 让我为您翻译这段关于 Minecraft 模组开发的内容： 下界岩（Netherrack）这里，我们基本上需要确保这边的土壤供应器与树苗的变化保持一致，这一点非常重要，否则就无法正常工作.
完成这些设置后，显然血木还不能在下界自然生成，但这肯定会改变下方的方块.
首先，我们显然需要重新运行数据生成器，以便配置特性发生变化.
 完成后，在游戏中现在看起来是这样的：好的朋友们，我现在回到了 Minecraft 中.
当然，这里所有的树木仍然存在，因为它们是在我们做出更改之前生成的.
但是，如果我传送到一个完全不同的位置（让我们随便传送到很远的地方），然后找到一个热带草原生物群系，我们会发现这里没有任何血木树.
你看，这里一棵都没有，因为如果我试图把它放在泥土上，它是不会生长的.
然而，如果我把它放在下界方块上，它突然就能生长了，而且也能正常生长.
 这就是我们如何改变不同树木的"土壤"要求.
特别重要的是，在 Neo Forge 上，我们无法将其放置在任何泥土类型上，这是 Forge 中的一个修复.
在 Forge 中它仍然可以在泥土上生长，但总的来说，这就是如何添加或更改树苗生长所需的方块.
非常有趣，这就是本教程的全部内容了，下一个视频我们将讨论自定义灌木