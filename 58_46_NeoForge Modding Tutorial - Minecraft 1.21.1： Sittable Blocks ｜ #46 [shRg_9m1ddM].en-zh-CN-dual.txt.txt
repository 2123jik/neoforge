让我们为《我的世界》添加一个可坐的椅子功能.
在下方链接的 121 个模组开发课程中，有更多深入的《我的世界》模组开发主题，包括可繁殖和可驯服的实体、自定义实体装甲，甚至自定义实体物品栏等众多精彩内容.
 好的，让我们继续，在本教程中我们将为《我的世界》添加一个可坐的椅子.
上次我们添加了椅子方块，看起来确实像把椅子，非常棒.
现在我们要实现右键点击就能坐在上面的功能.
 这个功能需要用一个小技巧来实现：我们实际上需要添加一个自定义实体，因为玩家只能坐在实体上.
不过，我们会在椅子的位置生成这个实体，这样就能让我们坐在实体上了.
当我们不想再坐在椅子上时，这个实体就会被移除.
这个方法虽然有点取巧，但非常有趣而且很酷.
 现在，这个实现会非常简单.
首先，我们要在 entity.custom 包中添加一个实体.
右键新建一个 Java 类，命名为 ChairEntity，这个类会非常简单，它继承自 net.minecraft.world.entity 包中的 Entity 类.
将鼠标悬停在这里来实现这些方法，再次悬停来创建匹配的 super 构造函数，然后我们只需要重写一个方法：removePassenger 方法，在这里我们会调用 this.
 这段文本是关于游戏开发中实体（Entity）处理的代码说明，我将为您翻译为简体中文： kill 方法基本上会销毁这个实体，仅此而已.
我们不需要添加任何存档数据，不需要添加任何同步数据，什么都不需要，基本上就是当我们移除乘客时这个实体会自行销毁.
然后我们可以直接转到我们的 mod entities 类中进行正确的注册.
我们将创建一个 public static final 的 supplier，类型是 EntityType，具体是 ChairEntity 类型.
这将是 chairEntity，等于 EntityTypes.register，传入 ChairEntity 以及一个 EntityType.Builder 的 supplier.
这里调用 ChairEntity 的构造函数，分类显然是 miscellaneous（杂项）.
在第一个右括号后，我们要调用 size 方法，参数是 0.5f 和 0.5f，然后构建 chairEntity.
这应该就是我们在这种情况下需要的所有内容.
然后回到我们的 chair block，我们要使用 useWithoutItem 方法，也就是方块的右键点击方法，然后我们要生成这个特定的实体并坐在上面，如果 level.
 这段文本描述了一个游戏或应用程序中的实体生成逻辑，我将为您翻译： 首先检查是否为客户端，然后在这里注意我们要进行取反，所以如果不是客户端级别这点很重要.
您也可以在下面的描述中再次检查代码.
entity 将被设置为 null，所以首先我们这里会有一个 null 值，然后我们要创建一个 chairEntity 列表，这将是我们的 entities 等于 level.getEntities(ModEntities.CHAIR_ENTITY.get())，然后在这个特定位置创建一个新的 AABB，接着我们在这里做一个 chair true.
这基本上会让我们获取到我们即将生成的椅子实体.
 我们这样做的原因是，我们要判断如果 entities 为空，那么我们就将 entity 设置为 ModEntities.CHAIR_ENTITY.get().spawn，并在转换为服务器级别的 level 中生成这个实体，然后在这个位置生成它，并带有触发器.
如果不为空，那么我们只需将 entity 设置为 entities 的值.
 注：保留了代码相关的专有名词如"entity"、"CHAIR_ENTITY"、"AABB"、"spawn"等，因为这些是编程术语.
 我理解您想要我翻译这段英文文本.
这是一段关于游戏开发的内容，我来为您翻译： 获取零值，我这样做的原因是为了避免在你不断右键点击时产生成千上万的实体.
这样就不会在这里生成新的实体，这就是这个想法.
然后我们需要开始写代码，所以我要写 player.
 注意：我保留了技术术语"player"的原文形式，因为这是代码中的关键字.
这段翻译保持了原文的技术含义，同时用流畅的中文表达出来.
如果您需要更多上下文或者对特定术语有疑问，请随时告诉我.
 以下是中文翻译： 在这种情况下开始写入实体，仅此而已.
我们只需要返回成功的交互结果.
这样我们就完成了，这将生成一个实体并让我们骑乘它，也就是说，我们将生成实体或者看起来像是坐在椅子上，这基本上就是我们需要做的全部.
即使实体本身是不可见的，我们仍然需要渲染它，这可能只是某种我们仍需要渲染的东西，就这么简单.
 因此在实体客户端，我们要制作一个椅子渲染器，这将继承自 EntityRenderer 类型的 ChairEntity，这里实际上只需要实现 getTextureLocation 方法.
再次悬停在这上面创建匹配的超类构造函数，并在这里将其设为公共.
然后我们要重写 shouldRender 方法，在这种情况下返回 true，然后当然要在客户端模组事件中组合这些，这里会有椅子的实体渲染器，将使用 ChairRenderer，这就是全部了.
我们不需要添加其他任何东西，不需要添加模型或任何其他类型的东西，这就是我们所需要的全部.
 现在让我们运行游戏看看是否有效.
好的朋友，在 Minecraft 中，如果我右键点击这个，你可以看到我突然坐在了椅子上，你可以看到这里生成了一个实体.
如果我下来，它就会消失.
你可以看到它基本上就消失了，我甚至可以这样做，我可以从一个椅子右键点击到另一个，这都没问题，因为我们还设置了一旦实体停止被骑乘就会立即删除自己.
就是这样，这就是我们需要的全部，这就是添加到 Minecraft 中的可坐椅子，太棒了.
这就是本教程的全部内容，下次视频中我们将讨论使用 MC meta 文件进行基本的纹理动画