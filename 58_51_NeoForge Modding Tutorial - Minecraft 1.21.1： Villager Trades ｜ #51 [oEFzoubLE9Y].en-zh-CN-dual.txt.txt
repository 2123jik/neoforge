让我们开始交易，并为我们的 Minecraft 模组添加自定义村民交易.
更深入的 Minecraft 模组开发主题可以在下方链接的 121 个模组课程中找到，包括可骑乘和可驯养的实体、自定义实体装备，甚至自定义实体物品栏等众多精彩内容.
好的，让我再说一遍，在本教程中，我们将为村民和流浪商人添加自定义交易.
你会发现这实际上比想象中更直观.
 现在，你需要什么呢？在我们的例子中，我们也要为自定义村民实现这个功能，但你不一定需要自定义村民，这对任何原版村民职业都适用.
为此，你需要一个使用 game event bus（游戏事件总线）的 mod events 类，这一点非常重要.
然后就像往常一样，首先创建一个 public static void 方法，这很重要，我们将其命名为 addCustomTrades，参数是一个 villagerTradesEvent，在这里我们称之为 event.
当然，像往常一样，在方法上方需要添加 @SubscribeEvent 注解，这一点极其重要.
它必须是 public static void，上方必须有 @SubscribeEvent 注解，参数必须是 villagerTradesEvent.
然后我们就可以开始了，在内部，你可以首先通过职业进行过滤，所以我们要写一个 if 语句，我要说 if event.
 让我帮你将这段文本翻译成中文： 让我们假设获取的类型等于村民职业中的农民.
现在我们要做的是，不使用 if 语句，而是将所有要添加的交易都添加给农民.
在这里，我们要创建一个辅助变量，它是一个整数到村民交易列表类型对象的映射.
这个名为 trades 的列表将等于 event.getTrades，从这个意义上说相当直观.
现在我们可以用以下方式简单地添加交易：你可以使用 trades.get，这里传入的数字表示村民需要达到的等级才能解锁该交易，然后我们可以直接调用 add 方法.
在这里我们可以开始输入 Trader，你可以看到它实际上在这里被称为 entity，我们在这里使用这个 Lambda 表达式，然后作为返回值我们创建一个新的 MerchantOffer.
这个 MerchantOffer 将包含以下内容：它将包含一个新的物品成本，我们只需使用 items 即可.
 *注：保留了专有名词如 Lambda、MerchantOffer、trades、items 等技术术语的原文形式.
* 让我帮你翻译这段文本： 这边是绿宝石，比如说我们用三个绿宝石，这样就可以了.
然后，在这之后是一个新的物品堆叠，这将是要返回的物品堆叠，它将是模组物品.
让我们来看看，这里放一个枸杞，为什么不呢，然后假设你获得，比如说 18 个枸杞，这就是枸杞了.
 注： - "emerald"翻译为"绿宝石" - "Goji berry/berries"翻译为"枸杞" - "item stack"翻译为"物品堆叠" - "mod items"翻译为"模组物品" 这个翻译保持了原文的游戏术语含义，同时使其在中文语境下更加通顺易懂.
 让我将这段关于 Minecraft 模组开发的文本翻译成中文： 获取其中的 18 个，然后我们要添加最大使用次数，比如说这个交易可以进行 6 次.
接着我们还要设定商人获得的经验值以及价格倍率，最后用分号结束.
你可以看到，添加一个交易就只需要这些步骤.
理论上，当我们右键点击农民时，我们的自定义交易就有机会被添加进去.
 需要注意的是，在这里添加的交易会被随机加入.
这意味着如果你安装了 80 个不同的模组，而每个模组都添加了很多交易，那么你的这个交易可能会变得非常罕见.
 我们可以复制这个交易并添加另一个交易.
比如说，这次商人想要钻石而不是绿宝石.
他可能想要 12 个钻石 - 听着，村民本来就是贪婪的家伙，所以这并非不可能.
让我看看这里还有什么...一个萝卜！他会用 1 个萝卜换 12 个钻石，当然绝对超值，对吧？ 然后我们还可以设置只有当村民达到二级时才能进行这个交易.
现在商人必须达到二级，然后他会用末影珍珠交换 - 为什么不呢？我们可以放入任何想要的物品，也可以是自定义物品.
这里他会用一个萝卜种子换一个末影珍珠，仅供参考.
也许这个交易只能使用两次，但可以获得更多经验值.
 这一切都很棒，很酷，但现在问题来了：这个系统如何与模组村民配合使用呢？其实差不多是一样的，我们只需要复制 if 语句，在最上面把农民替换成模组村民就可以了.
 让我为您翻译这段文本： Val，就是这样，突然间这些交易也被添加到了 CER 中.
我们稍微改变一下，比如说这个要改成辐射法杖，这个要改成原始铋.
然后在这里我们要用辐射法杖，接着在这里我们要用――我都不知道我还有什么――就用铋剑吧，姑且这么说.
当然，我们可以随意更改所有这些数值.
好了，让我们设定为两个绿宝石，就这样.
现在这些都被添加到了 CER 中，超级简单.
我跟你说，添加交易真的很简单.
现在你可能会说："哦，但是流浪商人的交易可能会比较复杂"――不，完全不会！我们只需要一个新方法.
自定义交易现在已经完成了，接下来在这里添加一个新方法，当然是一个 public static void 类型的 add_wondering_trades 方法.
这个方法需要一个 wonder_trades 事件参数，我称它为 event.
像往常一样，我们需要在上面添加@SubscribeEvent 注解，然后在这里我们会有两个列表，都是 villager_trades 类型的列表.
 我理解您想要翻译这段文本.
以下是简体中文翻译： 这个物品列表将会是等同于事件的通用交易.
获取通用交易，然后我会有另一个列表，那就是村民交易.
物品列表和这些就是稀有交易，我认为这些名称基本上已经告诉你它们各自的用途.
通用交易的数量会更多，我相信每个流浪商人都会有两个稀有交易，然后在这里我们可以直接称之为通用交易.
 注：我保留了一些关键术语的原文形式，如"generic trades"、"rare trades"等，因为这些可能是游戏中的专有名词.
这样的翻译既保持了原文的技术准确性，又确保了中文读者能够理解内容的含义.
 让我将这段文本翻译为简体中文： 添加或者然后做同样的事情，所以我们需要实体和随机源.
我们要创建一个新的商人交易，然后再次首先是物品成本，也就是我们基本上必须给予的物品.
比如说，再次设定为 16 个绿宝石和一个新的物品堆，作为我们要获得的物品.
模组物品开始 - 我们有锻造模板，为什么不用呢？锻造模板是个好主意.
经验值其实无关紧要，因为流浪商人最终也无法升级.
 然后理论上我们可以复制这个并将其改为稀有交易.
比如说，也许你必须给它一个末影物品，比如下界合金锭之类的.
作为回报，我们有什么呢？比如说 Barbar 音乐唱片，这只是个例子.
这就是我们需要做的全部内容.
像往常一样，所有代码都在下方供你查看，这真的不复杂，相当简单.
 让我们进入游戏看看是否有效.
回到 Minecraft，让我们看看这里.
我们可以看到农民这里有萝卜，我们可以获得，太棒了.
正如我们定义的，我们可以获得辐射法杖或者原始铋.
让我们也让他升级到第二级，看看这个家伙是否有什么东西 - 这里也有 GOI 浆果，太棒了.
如果我们让他升级，也许能看到第二级，然后这个家伙显然也一样.
这里我们可以看到铋剑，然后这里我们实际上没有获得另一个等级的幸运.
让我们看看能否让他也升级，然后看看 - 这里我们有了，用末影珍珠换取萝卜种子，太棒了.
 然后当然是流浪商人，让我们看看这里是否也能幸运碰到，因为这显然有时需要一点时间，因为流浪商人显然有更多不同的配方或者说不同的交易.
哦，我们实际上等等，他在哪里？这个家伙在哪里？这个家伙在那里，模板在那里，太好了.
然后当然对于稀有交易，那将会是，我是说那将会是稀有的，所以可能不会经常出现，但是给你看，让我们看看 - 就是这个，我们可以用下界合金获得 Barbar 音乐唱片，太棒了.
这就是添加到 Minecraft 的大量自定义村民交易.
这就是本教程的全部内容，下一个视频我们将讨论粒子效果