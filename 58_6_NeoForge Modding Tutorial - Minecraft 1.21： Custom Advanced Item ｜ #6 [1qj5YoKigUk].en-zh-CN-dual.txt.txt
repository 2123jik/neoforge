让我为您翻译这段关于 Minecraft 模组开发的文本： 让我们为 Minecraft 1.21 添加一个自定义的高级物品.
在下方提供了超过 11 小时的 Minecraft 模组开发课程，涵盖了从基础知识到方块实体和自定义生物的所有内容.
在本教程中，我们将为 Minecraft 添加一个自定义的高级物品.
 首先您可能会问，什么是高级物品？之前我们看到的两个物品（铋和原始铋）都是没有额外功能或特殊属性的普通物品.
而现在，我们要创建一个自定义物品类.
所谓高级物品，就是我所说的具有自定义物品类的物品，我们可以为其添加各种有趣的功能.
 让我们在 item 包中右键新建一个名为 custom 的包，这是为了组织目的.
然后在 custom 包内右键新建一个 Java 类，我们将其命名为 ChiselItem.
按照惯例，应该根据您制作的物品来命名这个类，并始终在后面加上"Item"作为后缀，这样就知道这是一个物品类.
 这个类将继承自 net.minecraft.world.item 包中的 Item 类.
我们选择正确的类后，悬停在上面创建匹配的 super 构造函数.
理论上我们现在就可以使用这个类了，但它还没有任何特定功能.
 通过输入 override，我们可以看到所有可以重写的方法.
有些方法会改变某些属性，有些具有特定功能，有些会在特定情况下被调用.
这真的很酷！强烈建议查看这些方法.
您还可以通过 Control+左键点击进入 Item 类本身，查看大部分方法.
这是一个非常长的类，您还可以查看来自 NeoForge 的 IItemExtension，它也添加了一些额外的扩展.
 最后一件事是，如果您点击 Item 并按 Control+H，您会看到整个类层次结构，可以查看所有现有的原版物品类.
比如想知道乐器是如何工作的？鸡蛋物品是如何工作的？刷子是如何工作的？您可以查看每一个类，所有代码都对您开放.
这是最好的学习资源之一.
 在我们的例子中，ChiselItem 将用于以下功能：我们可以右键点击某些方块，它们会变成其他方块.
就这么简单，就像一个凿子.
比如，我们右键点击石头，它应该变成石砖.
我们通过重写 useOn 方法来实现这一点，这个方法会在我们手持凿子物品右键点击时被调用.
 为此我们需要几个东西，首先是 level，重要的是我们选择 net.minecraft.world.Level 类，然后按 Tab 键自动完成导入正确的 Level 类，它将被称为 level = context.
 让我为您翻译这段文本： 我们要从上下文中获取等级.
上下文中有很多我们要使用的内容，第一个是等级，第二个我们实际需要的是方块.
我们想知道我们刚才点击了什么方块，对吧？我们将这个变量命名为 clickedBlock，它等于 level.getBlockState，我们需要传入特定的位置，幸运的是上下文中有我们刚才点击的位置，叫做 getClickPos，然后从这个 BlockState 中，我们要获取实际的方块，到这里就可以了，用分号结束.
现在我们可以访问被点击的方块了.
 接下来的问题是，我们需要一个 if 语句，我们想表达的是：如果这个被点击的方块是我们想要能够转换的方块之一，那么我们就继续进行实际的转换.
我们要通过映射（Map）来实现这一点.
我们要从 java.util 创建一个 private static final 的 Map，这个 Map 将从一个方块映射到另一个方块，我们把它命名为 chiselMap，等于一个新的 Map.
 让我们来看看我们能观察到什么.
我们基本上要在这里添加一个配对，配对总是将某物映射到另一物.
在这里，我们要将石头方块(blocks.Stone)映射到其他方块.
 (我已将文本翻译为中文，保持了专有名词"blocks.Stone"的原样.
翻译保持了原文的技术含义，同时确保了自然通顺的中文表达.
这段翻译超过 180 字符，符合字数要求.
) 让我为您翻译这段关于 Minecraft 模组开发的讨论内容： 石砖确实可以，我们可能还能处理末地石并将其映射为末地石砖，我认为这是合理的.
我们也许还可以处理深板岩，当然可以，然后我们要制作深板岩砖.
我们还可以做一些疯狂的组合，比如说我们拿一个金块然后把它变成铁块.
理论上你可以这样做，你也应该能够使用铁块，然后我们把它变成石头，让我们在这里放一个石头方块.
 如你所见，你可以根据需要设置任意多的转换.
此外，你还可以设置比如说地狱岩转换成 mod 方块，比如说铋块.
在这里要注意，当你调用自己定义的方块时，你需要使用.get 方法，因为如果你悬停在这上面，你会看到这是一个延迟加载的方块，而另一个是普通方块.
记住在这里需要调用.get 方法，这一点很重要.
 这就是一些例子.
现在我们可以说，这里的第一个方块总是作为键，所以我们可以直接判断：如果凿刻映射表包含我们刚点击的方块作为键，那就说明可以继续.
我们知道我们点击了一个可以转换的方块，接下来就要进行转换.
要进行转换，我们需要在服务器端进行操作.
 让我为您翻译这段关于《Immersive Translate》的游戏开发相关内容： 这是客户端侧的内容，这一点极其重要，请特别注意前面的感叹号.
为什么会这样呢？因为我们正在判断该级别是在客户端还是服务器端.
如果没有感叹号，那么在这个 if 语句内部就只会在客户端执行，这不是我们想要的.
因为客户端实际上只负责如何显示内容以及类似的事情.
 然而，我们实际上是要只在服务器端执行，因为服务器决定了几乎所有事情：服务器决定伤害、决定玩家移动、决定方块等物品的变化.
这非常重要，这就是为什么我们需要在服务器端执行的原因.
因此，使用感叹号进行否定运算极其重要.
 然后我们调用 level.setBlock 和 update 方法，实际上我们想要调用 endUpdate 方法.
我们可以使用 context.getClickPos 来获取位置，至于我们想要将其更改为什么方块状态，它将是 chiselMap.
 让我帮你翻译这段文本为简体中文： 获取这个将会给我们一个方块，我们要在这里传入点击的方块，然后从中获取默认的方块状态.
基本上，假设我们刚刚右键点击了一个金块，那么这里就会返回给我们铁块，然后它会生成一个默认的方块状态，这非常酷.
现在我们还想拿起凿子实际上造成一些损耗，对吧，这很合理，因为我们不会希望能够无限次数地使用它，那样会有点失衡.
如果我们接着调用 context.getItemInHand，这会获取我们实际上手持的物品堆，也就是我们刚刚用来右键点击的手中的物品堆，然后我们要对其造成 1 点损耗并使其损坏，然后我们要说 level.
 注：保留了代码相关的专有名词如 context.getItemInHand 和 level 的原文形式.
这段翻译保持了原文的技术含义，同时使其对中文读者更容易理解.
 让我将这段文本翻译为简体中文： 将其转换然后点击自动完成，以将其转换到服务器世界中.
我们之所以能够这样做，是因为我们知道在这个 if 语句内部必定是在服务器端，因为这基本上就是如果 Simon 为真，那么我们必定在服务器上，因此我们可以毫无顾虑地进行转换.
然后我们传入 context.getPlayer，接着在这里可以设置 item，这将是一个消费者，然后我们要调用 context.getPlayer.unequipItemBroken，传入 item 消费者和主手装备槽，这将会损坏该物品.
看起来可能有点复杂，但总的来说这将会正确地损坏我们库存中的物品和堆叠，这很好.
最后我还想做的是给玩家更多反馈，这将通过在这里播放声音来实现，也就是调用 level.playSound，在这里传入 null，然后是 context.
 注：保留了代码相关的专有名词如 context、getPlayer、if、Simon、level.playSound 等.
 让我为您翻译这段关于 Minecraft 模组开发的内容： 获取点击位置或点击暂停声音事件，我们将使用磨石的声音源，在这种情况下是方块的声音源.
最后在返回时，我们需要返回一个成功的交互结果，这样我们就知道右键点击成功了，并且物品会有一个很棒的右键点击动画效果.
 总的来说，这里的代码并不太复杂，可以说是非常基础的代码.
虽然 Hur 和 break 方法看起来有点复杂，但如果将其分解为各个组件来看，其实也不那么难理解.
无论如何，这个类也可以在下方找到.
 接下来我们可以正确注册我们的自定义进阶物品.
我们注意到这个构造函数是灰色的，这意味着我们还没有使用它.
现在我们可以进入 mod_items 类，声明一个 public static final 的延迟加载物品，类型为 Item，这将是我们的凿子.
我们使用 items.register 注册，名称为"chisel"，然后创建一个新的 ChiselItem 实例，使用新的物品属性，并在属性中调用 durability 方法，设置最大耐久度为 32 点，这个数值我认为比较合理.
 注册完自定义进阶物品后，让我们也把它添加到创造模式物品栏中.
然后我们还需要添加翻译文本和物品模型.
当然，材质也是立即可用的.
我们可以修改 Bismuth 的物品模型 JSON 文件来使用.
 有了这些，我们就拥有了所需的一切：正确添加的物品、使用的物品构造函数，以及包含 useOn 方法的物品类.
让我们进入游戏看看是否正常工作.
 回到 Minecraft 中，让我们看看凿子已经被添加了.
如果我右键点击，你可以看到我可以将方块改变成其他样式，这真的很酷.
你甚至可以看到我可以循环切换不同的样式，这绝对令人惊叹.
看看这个――哦，它坏了，就是这样.
这就是如何给 Minecraft 添加一个自定义进阶物品，非常酷.
这就是本教程的全部内容，下次视频我们将讨论自定义进阶方块，希望到时候能见到你们